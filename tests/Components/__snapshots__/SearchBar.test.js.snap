// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SearchBar component #render should render component 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "borderColor": "#e5e5e5",
        "borderRadius": 4,
        "borderWidth": 1,
        "display": "flex",
        "flexDirection": "row",
        "justifyContent": "space-between",
        "overflow": "hidden",
        "width": "80%",
      }
    }
  >
    <TextInput
      accessible={true}
      allowFontScaling={true}
      dataSet={Object {}}
      editable={true}
      onBlur={[Function]}
      onChangeText={[Function]}
      onFocus={[Function]}
      onKeyPress={[Function]}
      onSubmitEditing={[MockFunction]}
      placeholder="Search TV Shows"
      placeholderTextColor="#a3a3a3"
      rejectResponderTermination={true}
      returnKeyType="search"
      secureTextEntry={false}
      selectionColor="#1f2937"
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "color": "#1f2937",
            "flex": 1,
            "fontFamily": undefined,
            "fontSize": 12,
            "fontStyle": "normal",
            "fontWeight": "400",
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "width": undefined,
          },
          Object {},
        ]
      }
      underlineColorAndroid="transparent"
      value=""
      variant="unstyled"
    />
    <MaterialIcons
      dataSet={Object {}}
      name="search"
      onPress={[MockFunction]}
      style={
        Object {
          "color": "#737373",
          "fontSize": 20,
          "height": 20,
          "lineHeight": 20,
          "marginLeft": 8,
          "width": 20,
        }
      }
    />
  </View>
</RNCSafeAreaProvider>
`;

exports[`SearchBar component #render should render component with close button when user search 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "borderColor": "#e5e5e5",
        "borderRadius": 4,
        "borderWidth": 1,
        "display": "flex",
        "flexDirection": "row",
        "justifyContent": "space-between",
        "overflow": "hidden",
        "width": "80%",
      }
    }
  >
    <TextInput
      accessible={true}
      allowFontScaling={true}
      dataSet={Object {}}
      editable={true}
      onBlur={[Function]}
      onChangeText={[Function]}
      onFocus={[Function]}
      onKeyPress={[Function]}
      onSubmitEditing={[MockFunction]}
      placeholder="Search TV Shows"
      placeholderTextColor="#a3a3a3"
      rejectResponderTermination={true}
      returnKeyType="search"
      secureTextEntry={false}
      selectionColor="#1f2937"
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "color": "#1f2937",
            "flex": 1,
            "fontFamily": undefined,
            "fontSize": 12,
            "fontStyle": "normal",
            "fontWeight": "400",
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "width": undefined,
          },
          Object {},
        ]
      }
      underlineColorAndroid="transparent"
      value="search input"
      variant="unstyled"
    />
    <MaterialIcons
      dataSet={Object {}}
      name="close"
      onPress={[MockFunction]}
      style={
        Object {
          "color": "#737373",
          "fontSize": 20,
          "height": 20,
          "lineHeight": 20,
          "marginLeft": 8,
          "width": 20,
        }
      }
    />
  </View>
</RNCSafeAreaProvider>
`;
